Index: .idea/deploymentTargetDropDown.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"deploymentTargetDropDown\">\r\n    <value>\r\n      <entry key=\"app\">\r\n        <State />\r\n      </entry>\r\n    </value>\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/deploymentTargetDropDown.xml b/.idea/deploymentTargetDropDown.xml
--- a/.idea/deploymentTargetDropDown.xml	(revision 978541e4aae863db85a4a080d4dcb312bddfacb3)
+++ b/.idea/deploymentTargetDropDown.xml	(date 1707129650604)
@@ -3,7 +3,20 @@
   <component name="deploymentTargetDropDown">
     <value>
       <entry key="app">
-        <State />
+        <State>
+          <targetSelectedWithDropDown>
+            <Target>
+              <type value="QUICK_BOOT_TARGET" />
+              <deviceKey>
+                <Key>
+                  <type value="VIRTUAL_DEVICE_PATH" />
+                  <value value="C:\Users\royof\.android\avd\Pixel_7_Pro_API_34.avd" />
+                </Key>
+              </deviceKey>
+            </Target>
+          </targetSelectedWithDropDown>
+          <timeTargetWasSelectedWithDropDown value="2024-02-05T10:38:20.014637400Z" />
+        </State>
       </entry>
     </value>
   </component>
Index: app/src/main/java/com/example/swipe_n_borrow/RegisterAdmin.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.swipe_n_borrow;\r\n\r\nimport static androidx.constraintlayout.helper.widget.MotionEffect.TAG;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.appcompat.app.AppCompatActivity;\r\n\r\nimport android.annotation.SuppressLint;\r\nimport android.content.Intent;\r\nimport android.os.Bundle;\r\nimport android.text.TextUtils;\r\nimport android.util.Log;\r\nimport android.view.View;\r\nimport android.widget.Button;\r\nimport android.widget.CheckBox;\r\nimport android.widget.CompoundButton;\r\nimport android.widget.ProgressBar;\r\nimport android.widget.TextView;\r\nimport android.widget.Toast;\r\n\r\nimport com.google.android.gms.tasks.OnCompleteListener;\r\nimport com.google.android.gms.tasks.OnSuccessListener;\r\nimport com.google.android.gms.tasks.Task;\r\nimport com.google.android.material.textfield.TextInputEditText;\r\nimport com.google.firebase.auth.AuthResult;\r\nimport com.google.firebase.auth.FirebaseAuth;\r\nimport com.google.firebase.auth.FirebaseUser;\r\nimport com.google.firebase.firestore.DocumentReference;\r\nimport com.google.firebase.firestore.FirebaseFirestore;\r\n\r\nimport java.util.HashMap;\r\nimport java.util.Map;\r\n\r\npublic class RegisterAdmin extends AppCompatActivity {\r\n\r\n    TextInputEditText editTextEmail, editTextPassword, editTextID, editTextFullName, editTextPhoneNumber, editTextAddress, editTextLibrary;\r\n    Button buttonReg;\r\n    FirebaseAuth mAuth;\r\n    ProgressBar progressBar;\r\n    TextView textView;\r\n    FirebaseFirestore fstore;\r\n    String adminID;\r\n    boolean acceptedTerms=false;\r\n\r\n    public void onStart() {\r\n        super.onStart();\r\n        FirebaseUser currentUser = mAuth.getCurrentUser();\r\n        if(currentUser != null){\r\n            Intent intent= new Intent(getApplicationContext(), MainActivity.class);\r\n            startActivity(intent);\r\n            finish();\r\n        }\r\n    }\r\n    public void openActivityTermsAdmin(View view) {\r\n        Intent intent = new Intent(this, ActivityTermsAdmin.class);\r\n        startActivity(intent);\r\n    }\r\n\r\n\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.activity_register_admin);\r\n        mAuth= FirebaseAuth.getInstance();\r\n        editTextEmail = findViewById(R.id.email);\r\n        editTextPassword = findViewById(R.id.password);\r\n        editTextID = findViewById(R.id.id);\r\n        editTextFullName = findViewById(R.id.fullName);\r\n        editTextPhoneNumber = findViewById(R.id.phoneNumber);\r\n        editTextAddress = findViewById(R.id.address);\r\n        editTextLibrary = findViewById(R.id.library);\r\n        buttonReg =findViewById(R.id.BTN_Register);\r\n        progressBar = findViewById(R.id.progressBar);\r\n        textView = findViewById(R.id.LoginNow);\r\n        fstore = FirebaseFirestore.getInstance();\r\n\r\n        CheckBox checkBoxTerms = findViewById(R.id.checkBoxTermsAdmin);\r\n\r\n        checkBoxTerms.setOnCheckedChangeListener(new CompoundButton.OnCheckedChangeListener() {\r\n            @Override\r\n            public void onCheckedChanged(CompoundButton buttonView, boolean isChecked) {\r\n                // Update the acceptedTerms variable based on the CheckBox state\r\n                acceptedTerms = isChecked;\r\n            }\r\n        });\r\n        textView.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                Intent intent = new Intent(getApplicationContext(),Login.class);\r\n                startActivity(intent);\r\n                finish();\r\n            }\r\n        });\r\n\r\n        buttonReg.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n                progressBar.setVisibility(View.VISIBLE);\r\n                String email, password, id, fullName, phoneNumber, address, library;\r\n                email = String.valueOf(editTextEmail.getText());\r\n                password = String.valueOf(editTextPassword.getText());\r\n                id = String.valueOf(editTextID.getText());\r\n                fullName = String.valueOf(editTextFullName.getText());\r\n                phoneNumber = String.valueOf(editTextPhoneNumber.getText());\r\n                address = String.valueOf(editTextAddress.getText());\r\n                library = String.valueOf(editTextLibrary.getText());\r\n\r\n\r\n\r\n                if(TextUtils.isEmpty(email)){\r\n                    Toast.makeText(RegisterAdmin.this,\"Enter Email\", Toast.LENGTH_SHORT).show();\r\n                    return;\r\n                }\r\n                if(TextUtils.isEmpty(password)){\r\n                    Toast.makeText(RegisterAdmin.this,\"Enter Password\", Toast.LENGTH_SHORT).show();\r\n                    return;\r\n                }\r\n                if(TextUtils.isEmpty(id)){\r\n                    Toast.makeText(RegisterAdmin.this,\"Enter ID\", Toast.LENGTH_SHORT).show();\r\n                    return;\r\n                }\r\n                if(TextUtils.isEmpty(fullName)){\r\n                    Toast.makeText(RegisterAdmin.this,\"Enter Full Name\", Toast.LENGTH_SHORT).show();\r\n                    return;\r\n                }\r\n                if(TextUtils.isEmpty(phoneNumber)){\r\n                    Toast.makeText(RegisterAdmin.this,\"Enter Phone Number\", Toast.LENGTH_SHORT).show();\r\n                    return;\r\n                }\r\n                if(TextUtils.isEmpty(address)){\r\n                    Toast.makeText(RegisterAdmin.this,\"Enter Address\", Toast.LENGTH_SHORT).show();\r\n                    return;\r\n                }\r\n                if(TextUtils.isEmpty(library)){\r\n                    Toast.makeText(RegisterAdmin.this,\"Enter Library\", Toast.LENGTH_SHORT).show();\r\n                    return;\r\n                }\r\n                if (!acceptedTerms) {\r\n                    Toast.makeText(RegisterAdmin.this, \"Please accept the terms and conditions\", Toast.LENGTH_SHORT).show();\r\n                    progressBar.setVisibility(View.GONE);\r\n                    return;\r\n                }\r\n\r\n                mAuth.createUserWithEmailAndPassword(email, password)\r\n                        .addOnCompleteListener(new OnCompleteListener<AuthResult>() {\r\n                            @Override\r\n                            public void onComplete(@NonNull Task<AuthResult> task) {\r\n                                progressBar.setVisibility(View.GONE);\r\n                                if (task.isSuccessful()) {\r\n                                    Toast.makeText(RegisterAdmin.this, \"Account created.\",\r\n                                            Toast.LENGTH_SHORT).show();\r\n                                    adminID = mAuth.getCurrentUser().getUid();\r\n                                    DocumentReference documentReference = fstore.collection(\"Admins\").document(adminID);\r\n                                    Map<String,Object> admin =new HashMap<>();\r\n                                    admin.put(\"email\",email);\r\n                                    admin.put(\"fullName\",fullName);\r\n                                    admin.put(\"id\",id);\r\n                                    admin.put(\"address\",address);\r\n                                    admin.put(\"phoneNumber\",phoneNumber);\r\n                                    admin.put(\"library\",library);\r\n                                    documentReference.set(admin).addOnSuccessListener(new OnSuccessListener<Void>() {\r\n                                        @Override\r\n                                        public void onSuccess(Void aVoid) {\r\n                                            Log.d(TAG,\"onSuccess: user Profile is created for \"+adminID);\r\n                                        }\r\n                                    });\r\n\r\n                                    // Navigate to AdminHome activity after successful registration\r\n                                    Intent intent2 = new Intent(getApplicationContext(), AdminHome.class);\r\n                                    startActivity(intent2);\r\n                                    finish();\r\n\r\n                                } else {\r\n                                    // If sign in fails, display a message to the user.\r\n                                    Toast.makeText(RegisterAdmin.this, \"Authentication failed.\",\r\n                                            Toast.LENGTH_SHORT).show();\r\n                                }\r\n                            }\r\n                        });\r\n\r\n\r\n            }\r\n        });\r\n\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/swipe_n_borrow/RegisterAdmin.java b/app/src/main/java/com/example/swipe_n_borrow/RegisterAdmin.java
--- a/app/src/main/java/com/example/swipe_n_borrow/RegisterAdmin.java	(revision 978541e4aae863db85a4a080d4dcb312bddfacb3)
+++ b/app/src/main/java/com/example/swipe_n_borrow/RegisterAdmin.java	(date 1707127867288)
@@ -105,36 +105,54 @@
                 address = String.valueOf(editTextAddress.getText());
                 library = String.valueOf(editTextLibrary.getText());
 
-
-
-                if(TextUtils.isEmpty(email)){
-                    Toast.makeText(RegisterAdmin.this,"Enter Email", Toast.LENGTH_SHORT).show();
+                // Check if email is empty or not containing '@'
+                if (TextUtils.isEmpty(email) || !email.contains("@")) {
+                    Toast.makeText(RegisterAdmin.this, "Enter a valid Email", Toast.LENGTH_SHORT).show();
+                    progressBar.setVisibility(View.GONE);
                     return;
                 }
-                if(TextUtils.isEmpty(password)){
-                    Toast.makeText(RegisterAdmin.this,"Enter Password", Toast.LENGTH_SHORT).show();
+
+                // Check if password is less than 6 characters
+                if (TextUtils.isEmpty(password) || password.length() < 6) {
+                    Toast.makeText(RegisterAdmin.this, "Password should be more than 6 characters", Toast.LENGTH_SHORT).show();
+                    progressBar.setVisibility(View.GONE);
                     return;
                 }
-                if(TextUtils.isEmpty(id)){
-                    Toast.makeText(RegisterAdmin.this,"Enter ID", Toast.LENGTH_SHORT).show();
+
+                // Check if ID length is not equal to 9
+                if (TextUtils.isEmpty(id) || id.length() != 9) {
+                    Toast.makeText(RegisterAdmin.this, "ID should be 9 characters", Toast.LENGTH_SHORT).show();
+                    progressBar.setVisibility(View.GONE);
                     return;
                 }
-                if(TextUtils.isEmpty(fullName)){
-                    Toast.makeText(RegisterAdmin.this,"Enter Full Name", Toast.LENGTH_SHORT).show();
+
+                // Check if full name contains space
+                if (TextUtils.isEmpty(fullName) || !fullName.contains(" ")) {
+                    Toast.makeText(RegisterAdmin.this, "Please add last name", Toast.LENGTH_SHORT).show();
+                    progressBar.setVisibility(View.GONE);
                     return;
                 }
-                if(TextUtils.isEmpty(phoneNumber)){
-                    Toast.makeText(RegisterAdmin.this,"Enter Phone Number", Toast.LENGTH_SHORT).show();
+
+                // Check if phone number starts with '05'
+                if (TextUtils.isEmpty(phoneNumber) || !phoneNumber.startsWith("05")) {
+                    Toast.makeText(RegisterAdmin.this, "Phone number should start with '05'", Toast.LENGTH_SHORT).show();
+                    progressBar.setVisibility(View.GONE);
                     return;
                 }
-                if(TextUtils.isEmpty(address)){
-                    Toast.makeText(RegisterAdmin.this,"Enter Address", Toast.LENGTH_SHORT).show();
+
+                // Check if address and library fields are empty
+                if (TextUtils.isEmpty(address)) {
+                    Toast.makeText(RegisterAdmin.this, "Enter Address", Toast.LENGTH_SHORT).show();
+                    progressBar.setVisibility(View.GONE);
                     return;
                 }
-                if(TextUtils.isEmpty(library)){
-                    Toast.makeText(RegisterAdmin.this,"Enter Library", Toast.LENGTH_SHORT).show();
+
+                if (TextUtils.isEmpty(library)) {
+                    Toast.makeText(RegisterAdmin.this, "Enter Library", Toast.LENGTH_SHORT).show();
+                    progressBar.setVisibility(View.GONE);
                     return;
                 }
+
                 if (!acceptedTerms) {
                     Toast.makeText(RegisterAdmin.this, "Please accept the terms and conditions", Toast.LENGTH_SHORT).show();
                     progressBar.setVisibility(View.GONE);
@@ -151,17 +169,17 @@
                                             Toast.LENGTH_SHORT).show();
                                     adminID = mAuth.getCurrentUser().getUid();
                                     DocumentReference documentReference = fstore.collection("Admins").document(adminID);
-                                    Map<String,Object> admin =new HashMap<>();
-                                    admin.put("email",email);
-                                    admin.put("fullName",fullName);
-                                    admin.put("id",id);
-                                    admin.put("address",address);
-                                    admin.put("phoneNumber",phoneNumber);
-                                    admin.put("library",library);
+                                    Map<String, Object> admin = new HashMap<>();
+                                    admin.put("email", email);
+                                    admin.put("fullName", fullName);
+                                    admin.put("id", id);
+                                    admin.put("address", address);
+                                    admin.put("phoneNumber", phoneNumber);
+                                    admin.put("library", library);
                                     documentReference.set(admin).addOnSuccessListener(new OnSuccessListener<Void>() {
                                         @Override
                                         public void onSuccess(Void aVoid) {
-                                            Log.d(TAG,"onSuccess: user Profile is created for "+adminID);
+                                            Log.d(TAG, "onSuccess: user Profile is created for " + adminID);
                                         }
                                     });
 
@@ -172,15 +190,11 @@
 
                                 } else {
                                     // If sign in fails, display a message to the user.
-                                    Toast.makeText(RegisterAdmin.this, "Authentication failed.",
-                                            Toast.LENGTH_SHORT).show();
+                                    // You can remove this block if you don't want to display the default message
                                 }
                             }
                         });
-
-
             }
         });
-
     }
-}
\ No newline at end of file
+}
